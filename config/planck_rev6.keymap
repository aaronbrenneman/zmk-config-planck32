#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        cb_tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        cb_del {
            bindings = <&kp DEL>;
            key-positions = <40 43>;
        };

        cb_cntl {
            bindings = <&sk LCTRL>;
            key-positions = <25 26>;
        };

        cb_shft {
            bindings = <&sk LSHFT>;
            key-positions = <33 34>;
        };

        cb_gui {
            bindings = <&sk LGUI>;
            key-positions = <39 40>;
        };

        cb_alt {
            bindings = <&sk RALT>;
            key-positions = <43 44>;
        };

        cb_bkspc {
            bindings = <&kp BSPC>;
            key-positions = <10 9>;
        };

        cb_lbkt {
            bindings = <&kp LBKT>;
            layers = <0 1>;
            key-positions = <1 13>;
        };

        cb_lpara {
            bindings = <&kp LPAR>;
            layers = <0 1>;
            key-positions = <2 14>;
        };

        cb_lbrc {
            bindings = <&kp LBRC>;
            layers = <0 1>;
            key-positions = <3 15>;
        };

        cb_rbkt {
            bindings = <&kp RBRC>;
            layers = <0 1>;
            key-positions = <8 20>;
        };

        cb_rpara {
            bindings = <&kp RPAR>;
            layers = <0 1>;
            key-positions = <9 21>;
        };

        cb_rbrc {
            bindings = <&kp RBKT>;
            layers = <0 1>;
            key-positions = <10 22>;
        };

        cb_q {
            bindings = <&kp Q>;
            layers = <0>;
            key-positions = <12 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        _bas {
            bindings = <
__  &kp W  &kp E  &kp R  &kp T      _split  &kp Y      &kp U  &kp I      &kp O    __
&kp A  &kp S  &kp D  &kp F  &kp G      _split  &kp H      &kp J  &kp K      &kp L    &kp P
&kp Z  &kp X  &kp C  &kp V  &kp B      _split  &kp N      &kp M  &kp COMMA  &kp DOT  &kp SEMI
_thmbs
            >;
        };

        _num {
            bindings = <
__    &kp BSLH  &kp STAR   &kp FSLH  __   _split  __   &kp N4  &kp N5  &kp N6  __
&kp DOT  &kp SQT   &kp UNDER  &kp MINUS __   _split  __   &kp N1  &kp N2  &kp N3  &kp N0
__    &kp DQT   &kp EQUAL  &kp PLUS   __   _split  __   &kp N7  &kp N8  &kp N9  &sl 3
_lyrth
            >;
        };

        _nav {
            bindings = <
__      &kp TILDE  &kp GRAVE  &kp PIPE   __   _split  __   &kp HOME   &kp UP    &kp END    __
&kp EXCL   &kp AT     &kp POUND  &kp DLLR   __   _split  __   &kp LEFT   &kp DOWN  &kp RIGHT  &kp ESC
&kp QMARK  &kp CARET  &kp AMPS   &kp PRCNT  __   _split  __   &kp PG_UP  __     &kp PG_DN  __
_lyrth
            >;
        };

        _fun {
            bindings = <
_o_  _split  __    &kp F4  &kp F5  &kp F6  __
_o_  _split  &kp F11  &kp F1  &kp F2  &kp F3  &kp F10
_o_  _split  &kp F12  &kp F7  &kp F8  &kp F9  __
_lyrth
            >;
        };
    };
};
