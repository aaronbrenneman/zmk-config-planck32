#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using an encoder */
//&encoder {
//    status = "okay";
//};

/ {
    keymap {
        compatible = "zmk,keymap";

        _bas {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T      &none  &none  &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G      &none  &none  &kp H      &kp J  &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V  &kp B      &none  &none  &kp N      &kp M  &kp COMMA  &kp DOT  &kp BSPC
&none  &none  &none  &mo 1  &kp SPACE  &none  &none  &kp LSHFT  &mo 2  &none      &none    &none
            >;
        };

        _sym {
            bindings = <
&kp TILDE  &none   &none      &none     &none      &none  &none &none  &none    &none  &none &none
&kp GRAVE  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT  &none  &none &none  &none    &none  &none &none  
&none      &none   &none      &none     &none      &none  &none &none  &none    &none  &none &none  
&none      &none   &none      &trans    &trans     &none  &none &trans &trans   &none  &none &none
            >;
        };

        _nav {
            bindings = <
&none    &kp N6  &kp N5  &kp N4  &none   &none  &none  &none     &kp BSLH  &kp MINUS  &kp FSLH  &kp PLUS  &none
&kp N0   &kp N3  &kp N2  &kp N1  &none   &none  &none  &none     &kp DQT   &kp UNDER  &none     &kp STAR  &none
&kp DOT  &kp N9  &kp N8  &kp N7  &none   &none  &none  &none     &kp SQT   &kp EQUAL  &none     &none     &none
&none    &none   &none   &kp N0  &trans  &none  &none  &trans  &trans  &none  &none  &none
            >;
        };

        _num {
            bindings = <
&none  &kp F6  &kp F5  &kp F4  &kp F12  &none  &none  &none   &kp PG_UP  &kp UP    &kp PG_DN  &none
&none  &kp F3  &kp F2  &kp F1  &kp F11  &none  &none  &none   &kp LEFT   &kp DOWN  &kp RIGHT  &none
&none  &kp F9  &kp F8  &kp F7  &kp F10  &none  &none  &none   &kp HOME   &none     &kp END    &none
&none  &none   &none   &trans  &trans   &none  &none  &trans  &trans     &none     &none      &none
            >;
        };
    };
};
